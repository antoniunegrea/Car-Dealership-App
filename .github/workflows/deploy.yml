name: Deploy to Amazon ECS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  ECR_BACKEND: <ecr-url>/car-dealership-backend
  ECR_FRONTEND: <ecr-url>/car-dealership-frontend

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password | docker login --username AWS --password-stdin ${{ env.ECR_BACKEND }}
          aws ecr get-login-password | docker login --username AWS --password-stdin ${{ env.ECR_FRONTEND }}

      - name: Build & Push Backend
        run: |
          docker build -t backend ./backend
          docker tag backend:latest ${{ env.ECR_BACKEND }}:latest
          docker push ${{ env.ECR_BACKEND }}:latest

      - name: Build & Push Frontend
        run: |
          docker build -t frontend ./frontend
          docker tag frontend:latest ${{ env.ECR_FRONTEND }}:latest
          docker push ${{ env.ECR_FRONTEND }}:latest

      - name: Deploy to ECS
        run: |
          aws ecs update-service \
            --cluster car-dealership-cluster \
            --service backend-service \
            --force-new-deployment
          aws ecs update-service \
            --cluster car-dealership-cluster \
            --service frontend-service \
            --force-new-deployment
